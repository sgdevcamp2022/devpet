// Generated by data binding compiler. Do not edit!
package com.example.petmily.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.databinding.Bindable;
import androidx.databinding.DataBindingUtil;
import androidx.databinding.ViewDataBinding;
import com.example.petmily.R;
import com.example.petmily.model.data.profile.Pet;
import java.lang.Deprecated;
import java.lang.Object;

public abstract class PetListBinding extends ViewDataBinding {
  @NonNull
  public final TextView about;

  @NonNull
  public final TextView birth;

  @NonNull
  public final TextView division;

  @NonNull
  public final TextView name;

  @NonNull
  public final ImageView petImage;

  @NonNull
  public final ConstraintLayout right;

  @NonNull
  public final LinearLayout top;

  @Bindable
  protected Pet mPet;

  protected PetListBinding(Object _bindingComponent, View _root, int _localFieldCount,
      TextView about, TextView birth, TextView division, TextView name, ImageView petImage,
      ConstraintLayout right, LinearLayout top) {
    super(_bindingComponent, _root, _localFieldCount);
    this.about = about;
    this.birth = birth;
    this.division = division;
    this.name = name;
    this.petImage = petImage;
    this.right = right;
    this.top = top;
  }

  public abstract void setPet(@Nullable Pet pet);

  @Nullable
  public Pet getPet() {
    return mPet;
  }

  @NonNull
  public static PetListBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot) {
    return inflate(inflater, root, attachToRoot, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.pet_list, root, attachToRoot, component)
   */
  @NonNull
  @Deprecated
  public static PetListBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup root,
      boolean attachToRoot, @Nullable Object component) {
    return ViewDataBinding.<PetListBinding>inflateInternal(inflater, R.layout.pet_list, root, attachToRoot, component);
  }

  @NonNull
  public static PetListBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.inflate(inflater, R.layout.pet_list, null, false, component)
   */
  @NonNull
  @Deprecated
  public static PetListBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable Object component) {
    return ViewDataBinding.<PetListBinding>inflateInternal(inflater, R.layout.pet_list, null, false, component);
  }

  public static PetListBinding bind(@NonNull View view) {
    return bind(view, DataBindingUtil.getDefaultComponent());
  }

  /**
   * This method receives DataBindingComponent instance as type Object instead of
   * type DataBindingComponent to avoid causing too many compilation errors if
   * compilation fails for another reason.
   * https://issuetracker.google.com/issues/116541301
   * @Deprecated Use DataBindingUtil.bind(view, component)
   */
  @Deprecated
  public static PetListBinding bind(@NonNull View view, @Nullable Object component) {
    return (PetListBinding)bind(component, view, R.layout.pet_list);
  }
}
