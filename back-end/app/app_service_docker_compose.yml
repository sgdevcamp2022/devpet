version: '3.8'
services:
  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    ports:
      - 27017:27017
    volumes:
      - ./docker-volumes/mongodb:/data/db/mongodb
      - ./docker-volumes/rs-init.sh:/scripts/rs-init.sh
      - ./docker-volumes/init.js:/scripts/init.js
    networks:
      - mongoCluster
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=app_db
    depends_on:
      - mongo-replica1
      - mongo-replica2
    links:
      - mongo-replica1
      - mongo-replica2
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo-replica1:
    container_name: mongo-replica1
    image: mongo
    networks:
      - mongoCluster
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=app_db
    ports:
      - 27018:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  mongo-replica2:
    container_name: mongo-replica2
    image: mongo
    networks:
      - mongoCluster
    environment:
      - MONGO_INITDB_ROOT_USERNAME=root
      - MONGO_INITDB_ROOT_PASSWORD=root
      - MONGO_INITDB_DATABASE=app_db
    ports:
      - 27019:27017
    restart: always
    entrypoint: [ "/usr/bin/mongod", "--bind_ip_all", "--replSet", "dbrs" ]

  redis:
    image: redis:alpine
    command: redis-server --port 6379
    container_name: redis_boot
    hostname: redis_boot
    labels:
      - "name=app_redis"
      - "mode=standalone"
    ports:
      - 6379:6379
networks:
  mongoCluster:
    driver: bridge